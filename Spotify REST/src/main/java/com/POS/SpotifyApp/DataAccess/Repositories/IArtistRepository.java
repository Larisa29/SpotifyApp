package com.POS.SpotifyApp.DataAccess.Repositories;

import com.POS.SpotifyApp.DataAccess.Models.Artist;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.PagingAndSortingRepository;
import org.springframework.stereotype.Repository;

import javax.transaction.Transactional;
import java.awt.print.Pageable;
import java.util.List;

@Repository
public interface IArtistRepository extends JpaRepository<Artist, String>, PagingAndSortingRepository<Artist, String> {
    @Query(value="SELECT * FROM artists", nativeQuery = true)
    List<Artist> findAllArtists(Pageable pageable);

    @Query(value = "SELECT * FROM artists WHERE id=?1", nativeQuery = true)
    Artist getArtistById (String id);

//    @Query(value = "SELECT * FROM artists WHERE name = ?1", nativeQuery = true)
//    List<Artist> getArtistsByName(String name);
    List<Artist> findByName(String name); //same as the above, but generated by jpa
    @Query(value = "INSERT INTO songs_artists(artist_id, song_id) values (?1, ?2)", nativeQuery = true)
    void addSongArtist(String artistId, Integer songId);

//    @Query(value = "DELETE FROM artists WHERE id=?1",nativeQuery = true)
//    void deleteArtist(String id);
    @Transactional
    void deleteArtistById(String id);




}
