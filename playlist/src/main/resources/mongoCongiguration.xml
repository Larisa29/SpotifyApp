<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"

       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xsi:schemaLocation="
                           http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/data/mongo
                           http://www.springframework.org/schema/data/mongo/spring-mongo.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd">
    <context:annotation-config />


    <mongo:db-factory dbname="#{properties.getProperty('mongo.database')}"
                      port="#{properties.getProperty('mongo.port')}"
                      host="#{properties.getProperty('mongo.host')}"/>

    <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
        <constructor-arg ref="mongoDbFactory" />
        <constructor-arg ref="mongoConverter" />
    </bean>
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

    <mongo:repositories base-package="com.example.playlist.repository" mongo-template-ref="mongoTemplate" />

    <bean class="com.example.playlist.event.CascadeSaveMongoEventListener">
    </bean>

    <mongo:mapping-converter id="mongoConverter" base-package="com.baeldung.converter">
        <mongo:custom-converters base-package="com.example.playlist.converter" />
    </mongo:mapping-converter>

</beans>